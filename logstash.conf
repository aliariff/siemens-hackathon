input {
  tcp {
    port => 5000
    type => "syslog"
  }
  udp {
    port => 5001
    type => "syslog"
  }
}

## Add your filters / logstash plugins configuration here
filter {
  if [message] =~ "pssGitLab" {
    drop { }
  }
  else if [message] =~ "THREAT," {
    grok {
      match => [ "message", "<%{POSINT}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{GREEDYDATA:syslog_message}" ]
      overwrite => [ "message" ]
    }
    csv {
      columns => ["PaloAltoDomain","ReceiveTime","SerialNum","Type","Threat-Content Type","ConfigVersion","GenerateTime","SourceAddress","DestinationAddress","NATSourceIP","NATDestinationIP","Rule","SourceUser","DestinationUser","Application","VirtualSystem","SourceZone","DestinationZone","InboundInterface","OutboundInterface","LogAction","TimeLogged","SessionID","RepeatCount","SourcePort","DestinationPort","NATSourcePort","NATDestinationPort","Flags","IPProtocol","Action","URL","Threat-ContentName","Category","Severity","Direction","seqno","actionflags","SourceCountry","DestinationCountry","cpadding","contenttype"]
    }
  }
  else if [message] =~ "TRAFFIC," or [message] =~ "SYSTEM," {
    grok {
      match => [ "message", "<%{POSINT}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{GREEDYDATA:syslog_message}" ]
      overwrite => [ "message" ]
    }
    csv {
      columns => [ "PaloAltoDomain","ReceiveTime","SerialNum","Type","Threat-ContentType","ConfigVersion","GenerateTime","SourceAddress","DestinationAddress","NATSourceIP","NATDestinationIP","Rule","SourceUser","DestinationUser","Application","VirtualSystem","SourceZone","DestinationZone","InboundInterface","OutboundInterface","LogAction","TimeLogged","SessionID","RepeatCount","SourcePort","DestinationPort","NATSourcePort","NATDestinationPort","Flags","IPProtocol","Action","Bytes","BytesSent","BytesReceived","Packets","StartTime","ElapsedTimeInSec","Category","Padding","seqno","actionflags","SourceCountry","DestinationCountry","cpadding","pkts_sent","pkts_received" ]
    }
  }
}

output {
  elasticsearch {
    hosts => "elasticsearch:9200"
  }
  stdout { codec => rubydebug }
}
